import java.util.ArrayList;
import java.util.List;

/**
 * Represents the in-memory storage for the Vault
 * When the user opens the vault, data from vault.json is loaded into this object
 * When the user seals the vault, the data is copied from this object to vault.json
 * Then, this object is cleared
 */
public class VaultData {
    private String salt; // Base64-encoded salt for key derivation
    private VaultKey vaultKey; // The key used to encrypt/decrypt the vault

    private List<PasswordEntry> passwords;
    private List<PrivateKeyEntry> privkeys;


    /**
     * Constructs a VaultData object
     *
     * @param salt          Base64-encoded salt for key derivation
     * @param vaultKey      Base64-encoded encrypted vault key
     */
    public VaultData(String salt, VaultKey vaultKey) {

        this.salt = salt;
        this.vaultKey = vaultKey;

        this.passwords = new ArrayList<>();
        this.privkeys = new ArrayList<>();
    }

    public String getSalt() { return salt; }

    public String getEncryptedVaultKey() { return vaultKey; }

    public List<PasswordEntry> getPasswords() { return passwords; }
    public List<PrivateKeyEntry> getPrivkeys() { return privkeys; }
}
